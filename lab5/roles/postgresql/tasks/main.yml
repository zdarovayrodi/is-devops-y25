---
- name: Add PostgreSQL repository key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Add PostgreSQL repository
  apt_repository:
    repo: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
    state: present
    update_cache: yes

- name: Install PostgreSQL and dependencies
  apt:
    name: 
      - "postgresql-{{ postgresql_version }}"
      - "postgresql-contrib-{{ postgresql_version }}"
      - python3-psycopg2
    state: present

- name: Ensure PostgreSQL data directory exists
  file:
    path: "{{ postgresql_data_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'

- name: Configure postgresql.conf
  template:
    src: postgresql.conf.j2
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    owner: postgres
    group: postgres
    mode: '0644'
  notify: restart postgresql

- name: Configure pg_hba.conf
  template:
    src: pg_hba.conf.j2
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    owner: postgres
    group: postgres
    mode: '0644'
  notify: restart postgresql

- name: Start and enable PostgreSQL
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Create PostgreSQL users
  postgresql_user:
    name: "{{ item.name }}"
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role_attr_flags | default(omit) }}"
    state: present
  with_items: "{{ postgresql_users }}"
  become: yes
  become_user: postgres
  when: postgresql_users | length > 0

- name: Create PostgreSQL databases
  postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner | default(omit) }}"
    encoding: "{{ item.encoding | default('UTF-8') }}"
    state: present
  with_items: "{{ postgresql_databases }}"
  become: yes
  become_user: postgres
  when: postgresql_databases | length > 0

- name: Grant database privileges
  postgresql_privs:
    database: "{{ item.database }}"
    roles: "{{ item.name }}"
    privs: "{{ item.privileges }}"
    type: database
    grant_option: no
  with_items: "{{ postgresql_users }}"
  become: yes
  become_user: postgres
  when: postgresql_users | length > 0 and item.privileges is defined and item.database is defined
